<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwang.mapper.BookborrowTotalResultMapper" >
  <resultMap id="BaseResultMap" type="com.itwang.pojo.BookborrowTotalResult" >
    <result column="outid" property="outid" jdbcType="VARCHAR" />
    <result column="total" property="total" jdbcType="BIGINT" />
    <result column="frequency" property="frequency" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    outid, total, frequency
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itwang.pojo.BookborrowTotalResultExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bookborrow_total_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectXingZuoRank" resultType="com.itwang.pojo.XingZuoRank">
    SELECT
        c.xingzuo AS name,
        sum(b.total) AS count
    FROM
        bookborrow_total_result b
    JOIN baseinfo c ON b.outid = c.ouid
    <where>
      <if test="grade != null">
        b.outid like CONCAT(#{grade},"%")
      </if>
    </where>
    GROUP BY
        c.xingzuo
    ORDER BY
        count DESC
  </select>
  <select id="getPersonBookBorrowRank" resultType="com.itwang.pojo.PersonBookBorrowRank">
    SELECT
        b.outid as outid,
        c.name AS name,
        b.total AS count,
        c.dept as dept
    FROM
        bookborrow_total_result b
    JOIN baseinfo c ON b.outid = c.ouid
    <where>
      <if test="grade != null">
        b.outid like CONCAT(#{grade},"%")
      </if>
      <if test="xueyuan != null">
        and c.dept = #{xueyuan}
      </if>
    </where>
    ORDER BY
        count DESC
    limit 100
  </select>
  <select id="getPersonBookBorrowRankByOutid" resultType="com.itwang.pojo.PersonBookBorrowRank">
    SELECT
        b.outid as outid,
        c.name AS name,
        b.total AS count,
        c.dept as dept
    FROM
        bookborrow_total_result b
    JOIN baseinfo c ON b.outid = c.ouid
    <where>
      <if test="grade != null">
        b.outid like CONCAT(#{grade},"%")
      </if>
      <if test="xueyuan != null">
        and c.dept = #{xueyuan}
      </if>
    </where>
    ORDER BY
        count DESC
  </select>
  <select id="selectInstitutionRank" resultType="com.itwang.pojo.InstitutionBookRank">
    SELECT
    c.dept AS institution,
    sum(b.total) AS total
    FROM
    bookborrow_total_result b
    JOIN baseinfo c ON b.outid = c.ouid
    <where>
      <if test="grade != null">
        b.outid like CONCAT(#{grade},"%")
      </if>
    </where>
    GROUP BY c.dept
    ORDER BY
    total DESC
  </select>
  <select id="selectByOutidLike" resultMap="BaseResultMap">
    select outid,total,frequency from bookborrow_total_result where
    <foreach collection="list" open="(" close=")" item="item" separator="or">
      outid like CONCAT(#{item},"%")
    </foreach>
  </select>
  <delete id="deleteByExample" parameterType="com.itwang.pojo.BookborrowTotalResultExample" >
    delete from bookborrow_total_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itwang.pojo.BookborrowTotalResult" >
    insert into bookborrow_total_result (outid, total, frequency
      )
    values (#{outid,jdbcType=VARCHAR}, #{total,jdbcType=BIGINT}, #{frequency,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.itwang.pojo.BookborrowTotalResult" >
    insert into bookborrow_total_result
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="outid != null" >
        outid,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="frequency != null" >
        frequency,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="outid != null" >
        #{outid,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        #{total,jdbcType=BIGINT},
      </if>
      <if test="frequency != null" >
        #{frequency,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itwang.pojo.BookborrowTotalResultExample" resultType="java.lang.Integer" >
    select count(*) from bookborrow_total_result
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bookborrow_total_result
    <set >
      <if test="record.outid != null" >
        outid = #{record.outid,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=BIGINT},
      </if>
      <if test="record.frequency != null" >
        frequency = #{record.frequency,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bookborrow_total_result
    set outid = #{record.outid,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=BIGINT},
      frequency = #{record.frequency,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>