<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwang.mapper.ConsumeTotalResultMapper">
    <resultMap id="BaseResultMap" type="com.itwang.pojo.ConsumeTotalResult">
        <id column="outid" property="outid" jdbcType="VARCHAR"/>
        <result column="total" property="total" jdbcType="DOUBLE"/>
        <result column="frequency" property="frequency" jdbcType="DOUBLE"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    outid, total, frequency
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itwang.pojo.ConsumeTotalResultExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from consume_total_result
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from consume_total_result
        where outid = #{outid,jdbcType=VARCHAR}
    </select>
    <select id="selectByOutidLike" resultMap="BaseResultMap">
        select outid,total,frequency from consume_total_result where
        <foreach collection="list" open="(" close=")" item="item" separator="or">
            outid like CONCAT(#{item},"%")
        </foreach>
    </select>
    <select id="selectByProvince" resultType="com.itwang.pojo.ProvinceConsumeRank">
        SELECT
            b.sheng AS name,
            sum(c.total_amount) AS value
        FROM
            consume_total_kmeans c
        JOIN baseinfo b ON c.outid = b.ouid
        <where>
            <if test="grade != null">
                c.outid like CONCAT(#{grade},"%")
            </if>
        </where>
        GROUP BY
            b.sheng
        ORDER BY
        value DESC
  </select>
    <select id="selectByXingZuo" resultType="com.itwang.pojo.XingZuoRank">
        SELECT
        b.xingzuo AS name,
        sum(c.total_amount) AS count
        FROM
        consume_total_kmeans c
        JOIN baseinfo b ON c.outid = b.ouid
        <where>
            <if test="grade != null">
                c.outid like CONCAT(#{grade},"%")
            </if>
        </where>
        GROUP BY
        b.xingzuo
        ORDER BY
        count DESC
    </select>
    <select id="selectInstitutionRank" resultType="com.itwang.pojo.InstitutionConsumeRank">
        SELECT
            b.dept AS institution,
            sum(c.total_amount) AS total
        FROM
            consume_total_kmeans c
        JOIN baseinfo b ON c.outid = b.ouid
        <where>
            <if test="grade != null">
                c.outid like CONCAT(#{grade},"%")
            </if>
        </where>
        GROUP BY
            b.dept
        ORDER BY
            total DESC
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from consume_total_result
    where outid = #{outid,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.itwang.pojo.ConsumeTotalResultExample">
        delete from consume_total_result
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.itwang.pojo.ConsumeTotalResult">
    insert into consume_total_result (outid, total, frequency
      )
    values (#{outid,jdbcType=VARCHAR}, #{total,jdbcType=DOUBLE}, #{frequency,jdbcType=DOUBLE}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.itwang.pojo.ConsumeTotalResult">
        insert into consume_total_result
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="outid != null">
                outid,
            </if>
            <if test="total != null">
                total,
            </if>
            <if test="frequency != null">
                frequency,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="outid != null">
                #{outid,jdbcType=VARCHAR},
            </if>
            <if test="total != null">
                #{total,jdbcType=DOUBLE},
            </if>
            <if test="frequency != null">
                #{frequency,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.itwang.pojo.ConsumeTotalResultExample"
            resultType="java.lang.Integer">
        select count(*) from consume_total_result
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update consume_total_result
        <set>
            <if test="record.outid != null">
                outid = #{record.outid,jdbcType=VARCHAR},
            </if>
            <if test="record.total != null">
                total = #{record.total,jdbcType=DOUBLE},
            </if>
            <if test="record.frequency != null">
                frequency = #{record.frequency,jdbcType=DOUBLE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update consume_total_result
        set outid = #{record.outid,jdbcType=VARCHAR},
        total = #{record.total,jdbcType=DOUBLE},
        frequency = #{record.frequency,jdbcType=DOUBLE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.itwang.pojo.ConsumeTotalResult">
        update consume_total_result
        <set>
            <if test="total != null">
                total = #{total,jdbcType=DOUBLE},
            </if>
            <if test="frequency != null">
                frequency = #{frequency,jdbcType=DOUBLE},
            </if>
        </set>
        where outid = #{outid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.itwang.pojo.ConsumeTotalResult">
    update consume_total_result
    set total = #{total,jdbcType=DOUBLE},
      frequency = #{frequency,jdbcType=DOUBLE}
    where outid = #{outid,jdbcType=VARCHAR}
  </update>
</mapper>